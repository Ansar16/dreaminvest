{"version":3,"sources":["../../../../.tmp-es/components/data-table/private/head.jsx"],"names":["React","createReactClass","PropTypes","Checkbox","HeaderCell","DATA_TABLE_HEAD","DataTableHead","displayName","propTypes","assistiveTextForActionsHeader","string","assistiveTextForColumnSort","assistiveTextForSelectAllRows","allSelected","bool","indeterminateSelected","canSelectRows","columns","arrayOf","shape","Cell","func","props","object","id","onToggleAll","onSort","showRowActions","componentWillMount","render","width","label","map","column","property"],"mappings":";;AAAA;;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,SAASC,eAAT,QAAgC,8BAAhC;AAEA;;;;AAGA,IAAMC,gBAAgBL,iBAAiB;AACtC;AACA;AACAM,eAAaF,eAHyB;AAKtC;AACAG,aAAW;AACV;;;AAGAC,mCAA+BP,UAAUQ,MAJ/B;;AAKV;;;AAGAC,gCAA4BT,UAAUQ,MAR5B;;AASV;;;AAGAE,mCAA+BV,UAAUQ,MAZ/B;AAaVG,iBAAaX,UAAUY,IAbb;AAcVC,2BAAuBb,UAAUY,IAdvB;AAeVE,mBAAed,UAAUY,IAff;AAgBVG,aAASf,UAAUgB,OAAV,CACRhB,UAAUiB,KAAV,CAAgB;AACfC,YAAMlB,UAAUmB,IADD;AAEfC,aAAOpB,UAAUqB;AAFF,KAAhB,CADQ,CAhBC;AAsBVC,QAAItB,UAAUQ,MAtBJ;AAuBVe,iBAAavB,UAAUmB,IAvBb;AAwBVK,YAAQxB,UAAUmB,IAxBR;AAyBVM,oBAAgBzB,UAAUY;AAzBhB,GAN2B;AAkCtCc,oBAlCsC,gCAkChB,CAAE,CAlCc;AAoCtC;AACAC,QArCsC,oBAqC5B;AAAA;;AACT,WACC,mCACC;AAAI,iBAAU;AAAd,OACE,KAAKP,KAAL,CAAWN,aAAX,GACA;AACC,iBAAU,uBADX;AAEC,aAAM,KAFP;AAGC,aAAO;AAAEc,eAAO;AAAT;AAHR,OAKC;AAAK,iBAAU;AAAf,OACC,oBAAC,QAAD;AACC,qBAAe;AACdC,eAAO,KAAKT,KAAL,CAAWV;AADJ,OADhB;AAIC,eAAS,KAAKU,KAAL,CAAWT,WAJrB;AAKC,qBAAe,KAAKS,KAAL,CAAWP,qBAL3B;AAMC,oBAAO,KAAKO,KAAL,CAAWE,EAAlB,eAND;AAOC,YAAK,WAPN;AAQC,gBAAU,KAAKF,KAAL,CAAWG;AARtB,MADD,CALD,CADA,GAmBG,IApBL,EAqBE,KAAKH,KAAL,CAAWL,OAAX,CAAmBe,GAAnB,CAAuB,UAACC,MAAD;AAAA,aACvB,oBAAC,UAAD;AACC,oCAA4B,MAAKX,KAAL,CAAWX,0BADxC;AAEC,sBAAO,MAAKW,KAAL,CAAWE,EAAlB,cAAwBS,OAAOX,KAAP,CAAaY,QAArC,CAFD;AAGC,uBAAQ,MAAKZ,KAAL,CAAWE,EAAnB,cAAyBS,OAAOX,KAAP,CAAaY,QAAtC,CAHD;AAIC,gBAAQ,MAAKZ,KAAL,CAAWI;AAJpB,SAKKO,OAAOX,KALZ,EADuB;AAAA,KAAvB,CArBF,EA8BE,KAAKA,KAAL,CAAWK,cAAX,GACA;AAAI,aAAM,KAAV;AAAgB,aAAO;AAAEG,eAAO;AAAT;AAAvB,OACC;AAAK,iBAAU;AAAf,OACC;AAAM,iBAAU;AAAhB,OACE,KAAKR,KAAL,CAAWb,6BADb,CADD,CADD,CADA,GAQG,IAtCL,CADD,CADD;AA4CA;AAlFqC,CAAjB,CAAtB;AAqFA,eAAeH,aAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ## Children\nimport Checkbox from '../../checkbox';\nimport HeaderCell from './header-cell';\n\n// ## Constants\nimport { DATA_TABLE_HEAD } from '../../../utilities/constants';\n\n/**\n * Used internally, provides header row rendering to the DataTable.\n */\nconst DataTableHead = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: DATA_TABLE_HEAD,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Text for heading of actions column\n\t\t */\n\t\tassistiveTextForActionsHeader: PropTypes.string,\n\t\t/**\n\t\t * Text for sort action on table column header\n\t\t */\n\t\tassistiveTextForColumnSort: PropTypes.string,\n\t\t/**\n\t\t * Text for select all checkbox within the table header\n\t\t */\n\t\tassistiveTextForSelectAllRows: PropTypes.string,\n\t\tallSelected: PropTypes.bool,\n\t\tindeterminateSelected: PropTypes.bool,\n\t\tcanSelectRows: PropTypes.bool,\n\t\tcolumns: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tCell: PropTypes.func,\n\t\t\t\tprops: PropTypes.object,\n\t\t\t})\n\t\t),\n\t\tid: PropTypes.string,\n\t\tonToggleAll: PropTypes.func,\n\t\tonSort: PropTypes.func,\n\t\tshowRowActions: PropTypes.bool,\n\t},\n\n\tcomponentWillMount () {},\n\n\t// ### Render\n\trender () {\n\t\treturn (\n\t\t\t<thead>\n\t\t\t\t<tr className=\"slds-line-height_reset\">\n\t\t\t\t\t{this.props.canSelectRows ? (\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclassName=\"slds-text-align_right\"\n\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\tstyle={{ width: '3.25rem' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"slds-th__action slds-th__action--form\">\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\t\tlabel: this.props.assistiveTextForSelectAllRows,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tchecked={this.props.allSelected}\n\t\t\t\t\t\t\t\t\tindeterminate={this.props.indeterminateSelected}\n\t\t\t\t\t\t\t\t\tid={`${this.props.id}-SelectAll`}\n\t\t\t\t\t\t\t\t\tname=\"SelectAll\"\n\t\t\t\t\t\t\t\t\tonChange={this.props.onToggleAll}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t) : null}\n\t\t\t\t\t{this.props.columns.map((column) => (\n\t\t\t\t\t\t<HeaderCell\n\t\t\t\t\t\t\tassistiveTextForColumnSort={this.props.assistiveTextForColumnSort}\n\t\t\t\t\t\t\tid={`${this.props.id}-${column.props.property}`}\n\t\t\t\t\t\t\tkey={`${this.props.id}-${column.props.property}`}\n\t\t\t\t\t\t\tonSort={this.props.onSort}\n\t\t\t\t\t\t\t{...column.props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t{this.props.showRowActions ? (\n\t\t\t\t\t\t<th scope=\"col\" style={{ width: '3.25rem' }}>\n\t\t\t\t\t\t\t<div className=\"slds-th__action\">\n\t\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t\t{this.props.assistiveTextForActionsHeader}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t) : null}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t);\n\t},\n});\n\nexport default DataTableHead;\n"],"file":"head.js"}