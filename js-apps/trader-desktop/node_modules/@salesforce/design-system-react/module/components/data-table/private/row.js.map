{"version":3,"sources":["../../../../.tmp-es/components/data-table/private/row.jsx"],"names":["React","createReactClass","PropTypes","classNames","find","Checkbox","DATA_TABLE_ROW","DATA_TABLE_ROW_ACTIONS","DATA_TABLE_CELL","DataTableRow","displayName","propTypes","assistiveTextForSelectRow","string","canSelectRows","bool","columns","arrayOf","shape","Cell","func","props","object","fixedLayout","id","isRequired","item","onToggle","rowActions","element","selection","array","isSelected","handleToggle","e","checked","render","width","label","map","column","cellId","property","truncate","primaryColumn","cloneElement"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### find\nimport find from 'lodash.find';\n\n// ## Children\nimport Checkbox from '../../checkbox';\n\n// ## Constants\nimport {\n\tDATA_TABLE_ROW,\n\tDATA_TABLE_ROW_ACTIONS,\n\tDATA_TABLE_CELL,\n} from '../../../utilities/constants';\n\n/**\n * Used internally, provides row rendering to the DataTable.\n */\nconst DataTableRow = createReactClass({\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tdisplayName: DATA_TABLE_ROW,\n\n\t// ### Prop Types\n\tpropTypes: {\n\t\t/**\n\t\t * Text for select row\n\t\t */\n\t\tassistiveTextForSelectRow: PropTypes.string,\n\t\tcanSelectRows: PropTypes.bool,\n\t\tcolumns: PropTypes.arrayOf(\n\t\t\tPropTypes.shape({\n\t\t\t\tCell: PropTypes.func,\n\t\t\t\tprops: PropTypes.object,\n\t\t\t})\n\t\t),\n\t\t/**\n\t\t * Use this if you are creating an advanced table (selectable, sortable, or resizable rows)\n\t\t */\n\t\tfixedLayout: PropTypes.bool,\n\t\tid: PropTypes.string.isRequired,\n\t\titem: PropTypes.object.isRequired,\n\t\tonToggle: PropTypes.func,\n\t\trowActions: PropTypes.element,\n\t\tselection: PropTypes.array,\n\t},\n\n\tisSelected () {\n\t\treturn !!find(this.props.selection, this.props.item);\n\t},\n\n\thandleToggle (e, { checked }) {\n\t\treturn this.props.onToggle(this.props.item, checked, e);\n\t},\n\n\t// ### Render\n\trender () {\n\t\tconst isSelected = this.isSelected();\n\n\t\t// i18n\n\t\treturn (\n\t\t\t<tr\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'slds-hint-parent': this.props.rowActions,\n\t\t\t\t\t'slds-is-selected': this.props.canSelectRows && isSelected,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{this.props.canSelectRows ? (\n\t\t\t\t\t<td\n\t\t\t\t\t\trole={this.props.fixedLayout ? 'gridcell' : null}\n\t\t\t\t\t\tclassName=\"slds-text-align--right\"\n\t\t\t\t\t\tdata-label=\"Select Row\"\n\t\t\t\t\t\tstyle={{ width: '3.25rem' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\tlabel: this.props.assistiveTextForSelectRow,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tchecked={isSelected}\n\t\t\t\t\t\t\tid={`${this.props.id}-SelectRow`}\n\t\t\t\t\t\t\tname=\"SelectRow\"\n\t\t\t\t\t\t\tonChange={this.handleToggle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t) : null}\n\t\t\t\t{this.props.columns.map((column) => {\n\t\t\t\t\tconst Cell = column.Cell;\n\t\t\t\t\tconst cellId = `${this.props.id}-${DATA_TABLE_CELL}-${\n\t\t\t\t\t\tcolumn.props.property\n\t\t\t\t\t}`;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t{...column.props}\n\t\t\t\t\t\t\tclassName={column.props.truncate ? 'slds-truncate' : null}\n\t\t\t\t\t\t\tfixedLayout={this.props.fixedLayout}\n\t\t\t\t\t\t\trowHeader={column.props.primaryColumn}\n\t\t\t\t\t\t\tid={cellId}\n\t\t\t\t\t\t\titem={this.props.item}\n\t\t\t\t\t\t\tkey={cellId}\n\t\t\t\t\t\t\twidth={column.props.width}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.item[column.props.property]}\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{this.props.rowActions\n\t\t\t\t\t? React.cloneElement(this.props.rowActions, {\n\t\t\t\t\t\tid: `${this.props.id}-${DATA_TABLE_ROW_ACTIONS}`,\n\t\t\t\t\t\titem: this.props.item,\n\t\t\t\t\t})\n\t\t\t\t\t: null}\n\t\t\t</tr>\n\t\t);\n\t},\n});\n\nexport default DataTableRow;\n"],"file":"row.js"}